const diffType={mechanical:{id:"edit",ins:"INS",del:"DEL"},structural:{id:"structural",punctuation:"PUNCTUATION"},semantic:{id:"semantic"}},algorithms={diffMatchPatch:"diff_match_patch"},regexp={punctuation:/\W[\s]?[A-z]?/},structuralRules={punctuation:[(t,e=null)=>null===e||t.pos===e.pos,(t,e=null)=>null===e?t.content.length<=3:t.content.length<=3&&e.content.length<=3,(t,e=null)=>null===e||t.op!==e.op,(t,e=null)=>null===e?RegExp(regexp.punctuation).test(t.content):RegExp(regexp.punctuation).test(t.content)&&RegExp(regexp.punctuation).test(e.content)]};class DiffAlgorithmSelector{constructor(t,e,i){let n;switch(i){case algorithms.diffMatchPatch:n=new DiffMatchPatchAdapter(t,e);break;default:n=null}return n}}class Adapter{constructor(t,e){this.oldText=t,this.newText=e}makeDiff(t){this.threeDiff=new ThreeDiff(t,this.oldText,this.newText)}getMechanicalOperations(){return this.threeDiff.getMechanicalOperations()}getStructuralOperations(){return this.threeDiff.getStructuralOperations()}}class DiffMatchPatchAdapter extends Adapter{constructor(t,e){super(t,e);let i=new diff_match_patch;this.diffs=i.diff_main(t,e),i.diff_cleanupSemantic(this.diffs),this.patches=i.patch_make(this.diffs),console.log(this.patches),this.runDiffAlgorithm()}runDiffAlgorithm(){this.makeDiff(this._getMechanicalOps())}_getMechanicalOps(){let t=[];for(let e of this.patches){let i=e.start1;e.diffs.map((n,a)=>{if(a>0){let t=e.diffs[a-1];-1!==t[0]&&(i+=parseInt(t[1].length))}if(0!==n[0]){let e=1===n[0]?diffType.mechanical.ins:diffType.mechanical.del;t.push({id:getId(t.length,diffType.mechanical.id),op:e,content:n[1],pos:i})}})}return t}}class ThreeDiff{constructor(t,e,i){this.listMechanicalOperations=t,this.listStructuralOperations=[],this.listSemanticOperations=[],this.oldText=e,this.newText=i,this._executeStructuralAnalysis()}_executeStructuralAnalysis(){let t=this.listMechanicalOperations.slice(0);for(;t.length>0;){let e=!1,i=t.splice(0,1)[0],n=0;for(let a of t){if(this._checkPuntuation(i,a)){t.splice(n,1),this.listStructuralOperations.push(this._createPunctuation(i,a)),e=!0;break}n++}e||this._checkPuntuation(i)&&this.listStructuralOperations.push(this._createPunctuation(i))}}_checkPuntuation(t,e){let i=!0;return structuralRules.punctuation.map(n=>{n(t,e)||(i=!1)}),i}_createPunctuation(t,e){let i=[t];return null!=e&&i.push(e),{id:getId(this.listStructuralOperations.length,diffType.structural.id),op:diffType.structural.punctuation,by:"Gianmarco Spinaci",items:i}}getMechanicalOperations(){return this.listMechanicalOperations}getStructuralOperations(){return this.listStructuralOperations}getTextualContext(t,e){}}function getId(t,e){let i=`${e}-`,n=4-(++t).toString().length;for(;n>0;)i+="0",n--;return i+t}